name: Alpha Release Channel

on:
  push:
    branches: [ "alpha" ]

env:
  GO_VERSION: 1.23.1

permissions: read-all

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Go Test
        run: go test -shuffle=on -tags testing -race -v -covermode=atomic -coverprofile=coverage.out ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          codecov_yml_path: .github/codecov.yml

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@aaa42aa0628b4ae2578232a66b541047968fac86 # v6.1.0
        with:
          install-mode: 'goinstall'
          version: latest
          args: '--build-tags testing'

  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      release: ${{ steps.go-semver.outputs.MAIN_NEW_RELEASE }}
      semver: ${{ steps.go-semver.outputs.MAIN_SEMVER }}
    needs:
      - tests
      - lint
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up GPG key
        run: |
          mkdir -p ~/secrets
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > ~/secrets/private.asc
          GO_SEMVER_GPG_KEY_PATH="${HOME}/secrets/private.asc"
          chmod 600 "${GO_SEMVER_GPG_KEY_PATH}"
          echo "GO_SEMVER_GPG_KEY_PATH=${GO_SEMVER_GPG_KEY_PATH}" >> $GITHUB_ENV

      - name: Download latest stable release
        run: |
          chmod +x ./build/download_latest_release.sh
          bash ./build/download_latest_release.sh

      - name: Go Semver Release
        id: go-semver
        run: |
          if [ ! -f "${GO_SEMVER_GPG_KEY_PATH}" ]; then
            echo "Error: GPG key file not found at ${GO_SEMVER_GPG_KEY_PATH}"
            exit 1
          fi
          
          ./go-semver-release-linux-amd64 release https://github.com/s0ders/go-semver-release.git \
          --config .semver.yaml \
          --access-token ${{ secrets.GO_SEMVER_RELEASE_ACCESS_TOKEN }} \
          --branches='[{"name": "alpha", "prereleas": true}]'
          --gpg-key-path "${GO_SEMVER_GPG_KEY_PATH}" \
          --verbose