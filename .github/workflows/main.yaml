name: CI

on:
  push:
    branches: [ "main" ]

env:
  GO_VERSION: 1.23.1

permissions: read-all

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Go Test
        run: go test -shuffle=on -tags testing -race -v -covermode=atomic -coverprofile=coverage.out ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5.5.0
        with:
          codecov_yml_path: .github/codecov.yml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          install-mode: 'goinstall'
          version: 'latest'

  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      release: ${{ steps.go-semver.outputs.MAIN_NEW_RELEASE }}
      semver: ${{ steps.go-semver.outputs.MAIN_SEMVER }}
    needs:
      - tests
      - lint
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up GPG key
        run: |
          mkdir -p ~/secrets
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > ~/secrets/private.asc
          GO_SEMVER_GPG_KEY_PATH="${HOME}/secrets/private.asc"
          chmod 600 "${GO_SEMVER_GPG_KEY_PATH}"
          echo "GO_SEMVER_GPG_KEY_PATH=${GO_SEMVER_GPG_KEY_PATH}" >> $GITHUB_ENV

      - name: Download latest stable release
        run: |
          chmod +x ./build/download_latest_release.sh
          bash ./build/download_latest_release.sh

      - name: Go Semver Release
        id: go-semver
        run: |
          if [ ! -f "${GO_SEMVER_GPG_KEY_PATH}" ]; then
            echo "Error: GPG key file not found at ${GO_SEMVER_GPG_KEY_PATH}"
            exit 1
          fi
          
          ./go-semver-release-linux-amd64 release https://github.com/s0ders/go-semver-release.git \
          --config .semver.yaml \
          --access-token ${{ secrets.GO_SEMVER_RELEASE_ACCESS_TOKEN }} \
          --gpg-key-path "${GO_SEMVER_GPG_KEY_PATH}" \
          --verbose 

  docker-release:
    name: Docker release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - versioning
    if: ${{needs.versioning.outputs.release == 'true'}}
    env:
      VERSION: ${{needs.versioning.outputs.semver}}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ./build/Dockerfile
          push: true
          build-args: |
            APP_VERSION="${{ env.VERSION }}"
            APP_BUILD_NUMBER="${{ github.run_id }}"
            APP_COMMIT_HASH="${{ github.sha }}"
          tags: s0ders/go-semver-release:${{ env.VERSION }}

  slsa-build:
    name: SLSA build and release
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v2.1.0
    needs:
      - versioning
      - docker-release
    if: ${{needs.versioning.outputs.release == 'true'}}
    strategy:
      matrix:
        os:
          - linux
          - windows
          - darwin
        arch:
          - amd64
          - arm64
    permissions:
      id-token: write
      contents: write
      actions: read
    with:
      go-version: 1.23
      config-file: .github/slsa-goreleaser/${{ matrix.os }}-${{ matrix.arch }}.yml
      evaluated-envs: "VERSION:${{ needs.versioning.outputs.semver }}, COMMIT_HASH:${{ github.sha }}, BUILD_NUMBER:${{ github.run_id }}"
      upload-assets: true
      upload-tag-name: ${{ needs.versioning.outputs.semver }}